declare <ident> <value>

define function {...}

include <path>

declare data <<EOD
...
EOD

load <location> [limit [begin,]end] using [x,]y with (...)

location
- local file    (eg: ./file.csv)
- local command (eg: cat file.csv | grep -v '^$')
- http resource (eg: http://localhost:8000/file.csv)
- generate data from function call

note: only csv supported now - extension to json/xml to be written

column selectors:
- sum of columns:            c0+...+c9
- range of columns:          c0:c9
- sum range of columns:      c0:+c9
- list of columns/selectors: y0,...,y9

set title string
set theme string

set legend with (
	title    string
	position x[,y]
)

set grid [rows,]cols

at x,y[,w,h] include <path>
at x,y[,w,h] (
	use <ident> with(...)
	...
)

set padding number[,number[,number[,number]]]
set size    number,number

set xdata   string|number|time
set ydata   string|number|time
set xdomain begin,end
set ydomain begin,end

set shell string[,string...]

set xticks with (
	count       number
	position    top|right|bottom|left
	label       string
	format      string|variable
	inner-ticks true|false
	outer-ticks true|false
	label-ticks true|false
	band-ticks  true|false
)
set yticks with (
	count       number
	position    top|right|bottom|left
	label       string
	format      string|variable
	inner-ticks true|false
	outer-ticks true|false
	label-ticks true|false
	band-ticks  true|false
)

set style with (
	type           line|step|step-after|step-before|pie|bar|sun|stack|...
	color          string
	fill           string
	text-position  text-before|text-after
	line-style     dashed|dotted|straight
	width          number
	inner-radius   number
	outer-radius   number
	ignore-missing true|false
)

render [path]